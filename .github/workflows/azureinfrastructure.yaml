name: "Azure Infrastructure setup using Terraform"

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform-apply:
    name: "Terraform Apply"
    runs-on: ubuntu-latest  # Linux-based runner

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      # Debug the AZURE_CREDENTIALS secret (without sensitive data)
      - name: Debug AZURE_CREDENTIALS
        run: |
          echo "${{ secrets.AZURE_CREDENTIALS }}" | jq  # Prints the JSON structure

      # Parse Azure Credentials (JSON stored in AZURE_CREDENTIALS secret)
      - name: Parse Azure Credentials
        run: |
          echo "${{ secrets.AZURE_CREDENTIALS }}" | jq -r '.clientId' > CLIENT_ID.txt
          echo "${{ secrets.AZURE_CREDENTIALS }}" | jq -r '.clientSecret' > CLIENT_SECRET.txt
          echo "${{ secrets.AZURE_CREDENTIALS }}" | jq -r '.subscriptionId' > SUBSCRIPTION_ID.txt
          echo "${{ secrets.AZURE_CREDENTIALS }}" | jq -r '.tenantId' > TENANT_ID.txt

      # Set environment variables
      - name: Set Environment Variables
        run: |
          export ARM_CLIENT_ID=$(cat CLIENT_ID.txt)
          export ARM_CLIENT_SECRET=$(cat CLIENT_SECRET.txt)
          export ARM_SUBSCRIPTION_ID=$(cat SUBSCRIPTION_ID.txt)
          export ARM_TENANT_ID=$(cat TENANT_ID.txt)
        shell: bash

      # Install the latest version of Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # Format and validate Terraform files
      - name: Terraform Format
        working-directory: scripts/terraform
        run: terraform fmt -check -recursive

      # Initialize a new or existing Terraform working directory
      - name: Terraform Init
        working-directory: scripts/terraform
        run: terraform init

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        working-directory: scripts/terraform
        run: terraform plan

      # Apply Terraform
      - name: Terraform Apply
        working-directory: scripts/terraform
        run: terraform apply -auto-approve
