# 
# GitHub Actions workflow.
#
# Automatically deploys the Node.js microservice to Kubernetes on push to the main branch.
# For real use you might want to restrict this to the "prod" branch.
#

name: "Deploy book_catalog App"

on:
  workflow_run:
    workflows: ["Set Github Secrets Actions"]  # Trigger after GitHub secrets are set
    types:
      - completed

  #
  # Allows deployment to be invoked manually through the GitHub Actions user interface.
  #
  workflow_dispatch: 

jobs:

  deploy:
    runs-on: ubuntu-latest
    
    env:
      VERSION: ${{ github.sha }}
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      REGISTRY_UN: ${{ secrets.REGISTRY_UN }}
      REGISTRY_PW: ${{ secrets.REGISTRY_PW  }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      NAME: book_catalog
      DIRECTORY: book_catalog

    if: ${{ github.event.workflow_run.conclusion == 'success' }}  # Only run if previous workflow succeeded

    steps:
      
      # Checks-out your repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v3

      # Login to Azure
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure CLI script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show

      # Get AKS configs
      - name: Connect to Kubernetes
        run: az aks get-credentials --resource-group sit722part5 --name sit722part5 --overwrite-existing 

      #
      # Builds the Docker image.
      #
      - name: Build
        run: ./scripts/cd/build-image.sh

      #
      # Push the Docker image to the container registry.
      #
      - name: Publish
        run: ./scripts/cd/push-image.sh
      
      #
      # Deploy to Kubernetes
      #
      - name: Deploy
        run: ./scripts/cd/deploy.sh

      #
      # Verify Deployment.
      #
      - name: Verify Kubernetes Deployment
        run: |
          echo "** kubectl get deployment **"
          kubectl get deployment
          echo "** kubectl get pods **"
          kubectl get pods
          echo "** kubectl get services **"
          kubectl get services
